Elm.Html = Elm.Html || {};
Elm.Html.make = function (_elm) {
   "use strict";
   _elm.Html = _elm.Html || {};
   if (_elm.Html.values)
   return _elm.Html.values;
   var _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _A = _N.Array.make(_elm),
   _E = _N.Error.make(_elm),
   $moduleName = "Html";
   var Basics = Elm.Basics.make(_elm);
   var Color = Elm.Color.make(_elm);
   var Graphics = Graphics || {};
   Graphics.Collage = Elm.Graphics.Collage.make(_elm);
   var Graphics = Graphics || {};
   Graphics.Element = Elm.Graphics.Element.make(_elm);
   var Html = Html || {};
   Html.Events = Elm.Html.Events.make(_elm);
   var List = Elm.List.make(_elm);
   var Maybe = Elm.Maybe.make(_elm);
   var Native = Native || {};
   Native.Html = Elm.Native.Html.make(_elm);
   var Native = Native || {};
   Native.Json = Elm.Native.Json.make(_elm);
   var Native = Native || {};
   Native.Ports = Elm.Native.Ports.make(_elm);
   var Signal = Elm.Signal.make(_elm);
   var String = Elm.String.make(_elm);
   var Text = Elm.Text.make(_elm);
   var Time = Elm.Time.make(_elm);
   var _op = {};
   var color = function (clr) {
      return function () {
         var c = Color.toRgb(clr);
         var rgb = _L.append(String.show(c.red),
         _L.append(", ",
         _L.append(String.show(c.green),
         _L.append(", ",
         String.show(c.blue)))));
         return _U.eq(c.alpha,
         1) ? _L.append("rgb(",
         _L.append(rgb,
         ")")) : _L.append("rgba(",
         _L.append(rgb,
         _L.append(", ",
         _L.append(String.show(c.alpha),
         ")"))));
      }();
   };
   var pct = function (n) {
      return A2(String.append,
      String.show(100 * n),
      "%");
   };
   var em = function (n) {
      return A2(String.append,
      String.show(n),
      "em");
   };
   var px = function (n) {
      return A2(String.append,
      String.show(n),
      "px");
   };
   var bool = Native.Html.pair;
   _op[":="] = Native.Html.pair;
   var Fact = {ctor: "Fact"};
   var toElement = Native.Html.toElement;
   var text = Native.Html.text;
   var eventNode = Native.Html.eventNode;
   var node = Native.Html.node;
   var Html = {ctor: "Html"};
   _elm.Html.values = {_op: _op
                      ,node: node
                      ,eventNode: eventNode
                      ,text: text
                      ,toElement: toElement
                      ,bool: bool
                      ,px: px
                      ,em: em
                      ,pct: pct
                      ,color: color
                      ,Html: Html
                      ,Fact: Fact};
   return _elm.Html.values;
};